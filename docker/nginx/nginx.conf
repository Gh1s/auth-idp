events {

}

http {
    server {
        # In production, we should listen on the 80 port only to handle HTTPS redirection.
        listen 80;
        listen 443 ssl;

        ssl_certificate     /etc/ssl/certs/tls.crt;
        ssl_certificate_key /etc/ssl/certs/tls.key;

        error_page 401 = @401;

        set $api_key_auth_header "ApiKey nCYrrDGb4E28wWArMB2OKg==";

        location @401 {
            default_type application/json;
            return 401 '{"status":401,"message":"Unauthorized"}';
        }

        location ~ ^((/\.well-known/.+)|(/oauth2/auth/?)|(/oauth2/revoke/?)|(/oauth2/sessions/logout/?)|(/oauth2/token/?)|(/userinfo))$ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://hydra-public:4444;
        }

        location ~ ^(/oauth2/introspect/?)$ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://hydra-admin:4445;
        }

        location ~ ^(/public/health/alive/?)$ {
            rewrite ^(/public/health/alive/?)$ /health/alive break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://hydra-public:4444;
        }

        location ~ ^(/admin/health/alive/?)$ {
            rewrite ^(/admin/health/alive/?)$ /health/alive break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://hydra-admin:4445;
        }

        location ~ ^/.*$ {
            # The API key is used by the login UI to interact with the Hydra admin API.
            if ($http_authorization != $api_key_auth_header) {
                return 401;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://hydra-admin:4445;
        }
    }
}